function frequencyEstimateOfLineSpectra()

end


%% generate random number in [-pi, pi] with uniform distribution

function phaseMatrix = getPhaseMatrix(numberOfRealizations)

phaseMatrix = -pi + ((2 * pi) .* rand(numberOfRealizations, 2));

end


%% generate a single realization of the sinusoidal signal

function data = generateSingleRealization(phase1, phase2, variance)

N = 64; % as given in question
t = 1:N;
y = (10 * sin((0.24 * pi * t) + phase1)) + (5 * sin((0.26 * pi * t) + phase2));
whiteNoise = wgn(1, N, variance, 'linear');
y = y + whiteNoise;
data = y(:);

end

%% generate 50 monte carlo realizations

function realizations = getMonteCarloRealizations(variance, numberOfRealizations)

realizations = cell(numberOfRealizations, 1);
phaseMatrix = getPhaseMatrix(numberOfRealizations);

for k = 1:numberOfRealizations
    realizations{k} = generateSingleRealization(phaseMatrix(k, 1), phaseMatrix(k, 2), variance);
end

end

function frequencyEstimatesMusic = getMusicFrequencyEstimates(realizations, signalOrder, totalOrder)

frequencyEstimates = cell(length(realizations), 1);

for k = 1:length(realizations)
    frequencyEstimates{k} = music(realizations(k), signalOrder, totalOrder);
end

for k = 1:length(frequencyEstimates)
    frequ
